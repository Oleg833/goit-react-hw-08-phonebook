{"version":3,"file":"static/js/170.e069fc22.chunk.js","mappings":"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","sources":["components/Text/Text.js","components/Message/Message.jsx","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","redux/filter/selectors.js","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  font-size: 35px;\n  font-weight: 700;\n\n  text-align: center;\n  color: #dadada;\n  margin: 5px auto;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Text } from 'components/Text/Text';\n\nconst Message = ({ text }) => <Text textAlign=\"center\">{text}</Text>;\n\nexport default Message;\n\nMessage.protoTypes = {\n  text: PropTypes.string.isRequired,\n};\n","export const selectContacts = state => state.contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const { items, isLoading } = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    items.some(\n      i =>\n        i.name.toLowerCase() === contact.name.toLowerCase() ||\n        i.number === contact.number\n    )\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact(contact));\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.label} htmlFor=\"\">\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. \n                    For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label} htmlFor=\"\">\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"Number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.btn} disabled={isLoading}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.prototypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsTitle\":\"ContactList_contactsTitle__gHlpa\",\"contactList\":\"ContactList_contactList__UFVCg\",\"item\":\"ContactList_item__EZYHO\",\"value\":\"ContactList_value__cwfRG\",\"btn\":\"ContactList_btn__6Piat\"};","export const selectFilter = state => state.filter.filter;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { selectFilter } from 'redux/filter/selectors';\n\nconst ContactList = ({ children }) => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const { items, isLoading } = useSelector(selectContacts);\n  const [deletingContact, setDeletingContact] = useState(null);\n\n  const findContacts = () => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const filteredContacts = findContacts();\n\n  const handleDeleteContact = async id => {\n    setDeletingContact(id);\n    await dispatch(deleteContact(id));\n    setDeletingContact(null);\n  };\n\n  return (\n    <>\n      <h2 className={css.contactsTitle}>Contacts</h2>\n      {children}\n      <ul className={css.contactList}>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <li key={id} className={css.item}>\n              <p className={css.value}>\n                {name}: {number}\n              </p>\n              <button\n                type=\"button\"\n                onClick={() => handleDeleteContact(id)}\n                className={css.btn}\n                disabled={isLoading || deletingContact === id}\n              >\n                {deletingContact === id ? 'Deleting...' : 'Delete'}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilterInput = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={css.label}>\n      Find Contact By Name\n      <input\n        className={css.input}\n        type=\"text\"\n        name={filter}\n        value={filter}\n        onChange={changeFilterInput}\n        placeholder=\"Find contacts by name\"\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  changeFilterInput: PropTypes.func,\n};\n\nexport default Filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Message from 'components/Message/Message';\nimport Loader from 'components/Loader/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(selectContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n\n      {items.length === 0 && !isLoading && !error ? (\n        <Message text=\"You do not have any contacts in the phone book yet.\" />\n      ) : (\n        <ContactList>\n          <Filter />\n        </ContactList>\n      )}\n      {isLoading && !error && items.length === 0 && <Loader />}\n    </>\n  );\n};\n\nexport default ContactsPage;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Text","styled","Message","text","textAlign","protoTypes","PropTypes","selectContacts","state","contacts","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","items","isLoading","handleChange","e","currentTarget","value","resetForm","onSubmit","preventDefault","contact","some","i","toLowerCase","alert","addContact","className","css","htmlFor","type","onChange","placeholder","pattern","title","required","disabled","prototypes","selectFilter","filter","children","deletingContact","setDeletingContact","filteredContacts","includes","handleDeleteContact","id","deleteContact","map","onClick","setFilter","target","error","useEffect","fetchContacts","length","Loader","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}